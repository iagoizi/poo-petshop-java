/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Classes.Cliente;
import Classes.Compra;
import Classes.PetShop;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import Classes.Produto;
import Classes.Vendedor;

/**
 *
 * @author vitor
 */
public class TelaVenderProdutos extends javax.swing.JFrame {

    /**
     * Creates new form TelaCadastroCliente
     */
    private PetShop petshop;

    public TelaVenderProdutos(PetShop petshop) {
        initComponents();
        this.petshop = petshop;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        inputListarProduto = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        inputQuantidade = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        inputId = new javax.swing.JTextField();
        inputSair = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        inputListarProduto.setText("Listar Produtos");
        inputListarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputListarProdutoActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Vender Produtos");

        jButton2.setText("Comprar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onClick(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("Deseja realizar a compra de algum item?");

        inputQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputQuantidadeActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("Quantidade");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("ID");

        inputId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputIdActionPerformed(evt);
            }
        });

        inputSair.setText("Sair");
        inputSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel24)
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(inputSair, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(inputListarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(jLabel23)))
                        .addGap(0, 198, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputQuantidade)
                            .addComponent(inputId))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(inputListarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(inputId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(inputQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputSair, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputListarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputListarProdutoActionPerformed
        new TelaDeProdutos(petshop).setVisible(true);
                        
        this.setVisible(false);
    }//GEN-LAST:event_inputListarProdutoActionPerformed

    private void onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onClick
        //Pegar o id e a quantidade e ir para TelaVenderProdutosComprador
        
        if ( inputId.getText().isEmpty() || inputQuantidade.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(this, "Preencha todos os dados", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else if(petshop.getProdutos().isEmpty()){
            JOptionPane.showMessageDialog(this, "Nenhum produto cadastrado", "Erro", JOptionPane.ERROR_MESSAGE);
            return;           
        }
        
        else{
            long id = Long.parseLong(inputId.getText());
            int quantidade = Integer.parseInt(inputQuantidade.getText());
                
            if(id < 0 || quantidade < 0){
                JOptionPane.showMessageDialog(this, "Preencha com dados válidos", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            else{
                //Arraylist também é classe e esta sendo inicializado
                ArrayList <Produto> carrinho = new ArrayList<>();

                for(Produto produto : petshop.getProdutos()){
                
                    
                    
                    if( id == produto.getId()){

                        //Caso não tenha o produto em estoque
                        if(produto.getQuantidade() == 0){
                            JOptionPane.showMessageDialog(null, "Não temos produto em estoque!");
                        }   
                        //Caso tenha a quantidade para compra
                        else if(produto.getQuantidade() >= quantidade){

                            Produto compra = new Produto(produto.getNome(), produto.getPreco(), quantidade, id);                    
                            carrinho.add(compra);                  

                            //Para continuar comprando
                            String message = "Deseja comprar outro produto?";
                            String title = "Confirmação";
                            int resposta = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                            if (resposta == JOptionPane.NO_OPTION){

                                message = "O comprador possui cadastro?";
                                title = "Confirmação";
                                resposta = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                                if (resposta == JOptionPane.YES_OPTION){
                                    new TelaVenderProdutosDadosComprador(petshop, carrinho, null, null).setVisible(true);

                                    this.setVisible(false);
                                    return;
                                }
                                else{
                                    message = "Deseja cadastrar um novo cliente?";
                                    title = "Confirmação";
                                    resposta = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                                    //Venda do produto cadastrando produto
                                    if (resposta == JOptionPane.YES_OPTION){

                                        new TelaCadastroCliente(petshop).setVisible(true);

                                        this.setVisible(false);

                                        int tam = petshop.getClientes().size() - 1;                                                      
                                        int cont = 0;
                                        for(Cliente cliente : petshop.getClientes() ){                
                                            if(cont == tam){
                                                Vendedor vendedor = (Vendedor) petshop.getSessaoAtual();
                                                vendedor.vendaProduto(petshop,cliente, carrinho);
                                                JOptionPane.showMessageDialog(null, "Venda concluída!");
                                            }
                                            cont++;
                                        }                             
                                    }
                                    //Venda do produto sem cadastro do cliente
                                    else{

                                        Vendedor vendedor = (Vendedor) petshop.getSessaoAtual();                                                            
                                        vendedor.vendaProduto(petshop,null, carrinho);      
                                        JOptionPane.showMessageDialog(null, "Venda concluída!");
                                    }
                                }                       
                            }                                                                             
                        }
                        //Caso a quantidade solicitada seja maior que do estoque
                        else{
                            JOptionPane.showMessageDialog(null, "A quantidade em estoque está abaixo da solicitada!");
                        }
                    }           
                    else{
                        JOptionPane.showMessageDialog(null, "Produto inexiste!");
                    }
                }           
            }         
        }                               
    }//GEN-LAST:event_onClick

    private void inputQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputQuantidadeActionPerformed

    private void inputIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputIdActionPerformed

    private void inputSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputSairActionPerformed
        String message = "Deseja sair ?";
        String title = "Confirmação";
        int resposta = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION){
            this.setVisible(false);
        }
    }//GEN-LAST:event_inputSairActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputId;
    private javax.swing.JButton inputListarProduto;
    private javax.swing.JTextField inputQuantidade;
    private javax.swing.JButton inputSair;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
